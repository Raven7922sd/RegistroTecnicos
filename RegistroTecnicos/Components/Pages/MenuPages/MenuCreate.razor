@page "/Menu/Create"
@inject TecnicosService tecnicosService
@rendermode InteractiveServer

<PageTitle>Crear Técnico</PageTitle>

<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <!-- Notificaciones -->
    <div class="alert-container">
        <div class="alert alert-danger" role="alert" hidden="@string.IsNullOrEmpty(ErrorNombre)">
            @ErrorNombre
        </div>
        <div class="alert alert-success" role="alert" hidden="@string.IsNullOrEmpty(GuardarExito)">
            @GuardarExito
        </div>
    </div>

    <section class="form-container">
        <div class="form-card shadow rounded">
            <header class="form-card-header text-center">
                <h4>Registro de Técnico</h4>
            </header>

            <div class="form-card-body">

                <!-- TecnicoId -->
                <div class="form-group">
                    <label for="TecnicoId"><strong>TecnicoId</strong></label>
                    <InputNumber id="TecnicoId" class="form-control" @bind-Value="Tecnico.TecnicoId" readonly />
                </div>

                <!-- Nombre -->
                <div class="form-group">
                    <label for="Nombres"><strong>Nombre Completo</strong></label>
                    <InputText id="Nombres" class="form-control" @bind-Value="Tecnico.Nombres" />
                    <ValidationMessage For="(() => Tecnico.Nombres)" />
                </div>

                <!-- Sueldo por Hora -->
                <div class="form-group">
                    <label for="SueldoHora"><strong>Sueldo por Hora</strong></label>
                    <InputNumber id="SueldoHora" class="form-control" @bind-Value="Tecnico.SueldoHora" />
                    <ValidationMessage For="(() => Tecnico.SueldoHora)" />
                </div>

            </div>

            <!-- Acciones -->
            <footer class="form-card-footer text-center">
                <a href="/Menu/Index" class="btn btn-danger">
                    <span class="bi bi-arrow-left"></span> Volver
                </a>
                <button type="submit" class="btn btn-success">
                    <span class="bi bi-save"></span> Guardar
                </button>
                <button type="button" class="btn btn-secondary" @onclick="Nuevo">
                    <span class="bi bi-arrow-repeat"></span> Nuevo
                </button>
            </footer>
        </div>
    </section>
</EditForm>

@code {
    private Tecnicos Tecnico { get; set; } = new Tecnicos();
    private string ErrorNombre { get; set; } = string.Empty;
    private string GuardarExito { get; set; } = string.Empty;

    public void Nuevo()
    {
        this.Tecnico = new Tecnicos();
    }

    private async Task<bool> Validar()
    {
        ErrorNombre = string.Empty;

        if (await tecnicosService.ExisteNombre(Tecnico.Nombres))
        {
            return false;
        }
        return true;
    }

    public async Task Guardar()
    {
        ErrorNombre = string.Empty;
        GuardarExito = string.Empty;

        if (!await Validar())
        {
            ErrorNombre = "Ya existe un técnico con este nombre";
            return;
        }
        var guardo = await tecnicosService.Guardar(this.Tecnico);
        if (guardo != null)
        {
            GuardarExito = "Técnico guardado correctamente";
            Nuevo();
        }
        else
        {
            ErrorNombre = "Error al guardar el registro";
        }
    }
}
