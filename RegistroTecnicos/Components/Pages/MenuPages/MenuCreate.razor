@page "/Menu/Create"
@inject TecnicosService tecnicosService
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Create</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <!--Notifiaciones-->
    <label style="color:red; font-size:28px;" hidden="@string.IsNullOrEmpty(ErrorNombre)">@ErrorNombre</label>
    <label style="color:green; font-size:28px;" hidden="@string.IsNullOrEmpty(GuardarExito)">@GuardarExito</label>

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Registro de Técnicos</h5>
            </div>

            <div class="card-body">

                <!--TecnidoId-->
                <div class="mb-3">
                    <label class="form-label"><strong>TecnicoId</strong></label>
                    <InputNumber class="form-control" @bind-Value="Tecnico.TecnicoId" readonly />
                </div>

                <!--Nombre-->
                <div class="mb-3">
                    <label class="form-label"><strong>Nombres</strong></label>
                    <InputText class="form-control" @bind-Value="Tecnico.Nombres" />
                    <ValidationMessage For="(() => Tecnico.Nombres)" />
                </div>

                <!-- Sueldo Por Hora -->
                <div class="mb-3">
                    <label class="form-label"><strong>Sueldo por Hora</strong></label>
                    <InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora" />
                    <ValidationMessage For="(() => Tecnico.SueldoHora)" />
                </div>

            </div>

            <!--Botones de acciones-->
            <div class="card-footer text-center mt-2">
                <a href="/Menu/Index" class="btn btn-outline-danger">
                    <span class="bi bi-arrow-left"></span> Volver
                </a>
                <button type="submit" class="btn btn-outline-success bi bi-floppy" title="Guardar">
                    Guardar
                </button>
                <button type="button" class="btn btn-outline-secondary bi bi-arrow-clockwise" @onclick="Nuevo" title="Nuevo">
                    Nuevo
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private Tecnicos Tecnico { get; set; } = new Tecnicos();
    private string ErrorNombre { get; set; } = string.Empty;
    private string GuardarExito { get; set; } = string.Empty;

    public void Nuevo()
    {
        this.Tecnico = new Tecnicos();
    }

    private async Task<bool> Validar()
    {
        ErrorNombre = string.Empty;

        if (await tecnicosService.ExisteNombre(Tecnico.Nombres))
        {
            return false;
        }
        return true;
    }

    public async Task Guardar()
    {
        ErrorNombre = string.Empty;
        GuardarExito = string.Empty;

        if (!await Validar())
        {
            ErrorNombre = "Ya existe un técnico con este nombre";
            return;
        }
        var guardo = await tecnicosService.Guardar(this.Tecnico);
        if (guardo != null)
        {
            GuardarExito = "Técnico guardado correctamente";
            Nuevo();
        }
        else
        {
            ErrorNombre = "Error al guardar el registro";
        }
    }
}
