@page "/Menu/Edit/{TecnicoId:int}"
@inject TecnicosService tecnicosService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Editar Técnico</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />

	<!--Notificaciones-->
	<label style="color:blue; font-size:28px;" hidden="@string.IsNullOrEmpty(ErrorNombre)">@ErrorNombre</label>
	<label style="color:green; font-size:28px;" hidden="@string.IsNullOrEmpty(GuardarExito)">@GuardarExito</label>

	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header text-center">
				<h5 class="card-title">Registro de Técnicos</h5>
			</div>

			<div class="card-body">

				<!--TecnidoId-->
				<div class="mb-3">
					<label class="form-label"><strong>TecnicoId</strong></label>
					<InputNumber class="form-control" @bind-Value="Tecnico.TecnicoId" readonly></InputNumber>
				</div>

				<hr style="height: 4px; background-color: #000;" />

				<!--Nombre-->
				<div class="mb-3">
					<label class="form-label"><strong>Nombres</strong></label>
					<InputText class="form-control" @bind-Value="Tecnico.Nombres"></InputText>
					<ValidationMessage For="(() => Tecnico.Nombres)" />
				</div>

				<hr style="height: 4px; background-color: #000;" />

				<!--Sueldo por hora-->
				<div class="mb-3">
					<label class="form-label"><strong>Sueldo por Hora</strong></label>
					<InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora"></InputNumber>
					<ValidationMessage For="(() => Tecnico.SueldoHora)" />
				</div>

			</div>

			<!--Notificaciones-->
			<div class="card-footer text-center mt-2">
				<a href="/Menu/Index" class="btn btn-primary"><span class="bi bi-arrow-left"></span> Volver</a>
				<button type="submit" class="btn btn-success"><span class="bi bi-floppy"></span> Guardar</button>
			</div>
		</div>
	</div>
</EditForm>

@code {
	[Parameter]
	public int TecnicoId { get; set; }

	private Tecnicos Tecnico { get; set; } = new Tecnicos();
	public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
	private string ErrorNombre { get; set; } = string.Empty;
	private string GuardarExito { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Tecnico = await tecnicosService.Buscar(TecnicoId);
		ListaTecnicos = await tecnicosService.Listar(t => t.TecnicoId > 0);
	}

	public async Task Guardar()
	{
		ErrorNombre = string.Empty;
		GuardarExito = string.Empty;

		var guardo = await tecnicosService.Guardar(this.Tecnico);
		if (guardo != null)
		{
			GuardarExito = "Técnico modificado correctamente";
		}
		else
		{
			ErrorNombre = "Error al modificar el registro";
		}
	}
}
