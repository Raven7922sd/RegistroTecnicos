@page "/Menu/Edit/{TecnicoId:int}"
@inject TecnicosService tecnicosService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Modificar Técnico</PageTitle>

<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <!-- Notificaciones -->
    <div class="notification-container">
        <div class="notification error" hidden="@string.IsNullOrEmpty(ErrorNombre)">
            @ErrorNombre
        </div>
        <div class="notification success" hidden="@string.IsNullOrEmpty(GuardarExito)">
            @GuardarExito
        </div>
    </div>

    <section class="form-wrapper">
        <div class="form-card shadow-sm rounded">
            <header class="form-card-header text-center">
                <h4>Modificar Datos del Técnico</h4>
            </header>

            <div class="form-card-body">

                <!-- TecnicoId -->
                <div class="form-group">
                    <label for="TecnicoId"><strong>ID del Técnico</strong></label>
                    <InputNumber id="TecnicoId" class="form-control" @bind-Value="Tecnico.TecnicoId" readonly />
                </div>

                <div class="divider"></div>

                <!-- Nombre -->
                <div class="form-group">
                    <label for="Nombres"><strong>Nombre Completo</strong></label>
                    <InputText id="Nombres" class="form-control" @bind-Value="Tecnico.Nombres" />
                    <ValidationMessage For="(() => Tecnico.Nombres)" />
                </div>

                <div class="divider"></div>

                <!-- Sueldo por Hora -->
                <div class="form-group">
                    <label for="SueldoHora"><strong>Sueldo por Hora</strong></label>
                    <InputNumber id="SueldoHora" class="form-control" @bind-Value="Tecnico.SueldoHora" />
                    <ValidationMessage For="(() => Tecnico.SueldoHora)" />
                </div>

            </div>

            <!-- Botones de acción -->
            <footer class="form-card-footer text-center">
                <a href="/Menu/Index" class="btn btn-danger">
                    <span class="bi bi-arrow-left"></span> Regresar
                </a>
                <button type="submit" class="btn btn-success">
                    <span class="bi bi-save"></span> Guardar
                </button>
            </footer>
        </div>
    </section>
</EditForm>

@code {
    [Parameter]
    public int TecnicoId { get; set; }

    private Tecnicos Tecnico { get; set; } = new Tecnicos();
    public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
    private string ErrorNombre { get; set; } = string.Empty;
    private string GuardarExito { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Tecnico = await tecnicosService.Buscar(TecnicoId);
        ListaTecnicos = await tecnicosService.Listar(t => t.TecnicoId > 0);
    }

    public async Task Guardar()
    {
        ErrorNombre = string.Empty;
        GuardarExito = string.Empty;

        var guardo = await tecnicosService.Guardar(this.Tecnico);
        if (guardo != null)
        {
            GuardarExito = "Técnico modificado correctamente";
        }
        else
        {
            ErrorNombre = "Error al modificar el registro";
        }
    }
}
